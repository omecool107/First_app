 Transaction(
      id: 'T1', 
      title: 'New Jacket',
      amount: 42.69,
      date: DateTime.now()
      ),
    Transaction(
      id: 'T3', 
      title: 'New Boots',
      amount: 77.49,
      date: DateTime.now()
      ),
      Transaction(
      id: 'T4', 
      title: 'New Jacket',
      amount: 42.69,
      date: DateTime.now()
      ),
    Transaction(
      id: 'T5', 
      title: 'New Boots',
      amount: 77.49,
      date: DateTime.now()
      ),
      Transaction(
      id: 'T6', 
      title: 'New Jacket',
      amount: 42.69,
      date: DateTime.now()
      ),
    Transaction(
      id: 'T7', 
      title: 'New Boots',
      amount: 77.49,
      date: DateTime.now()
      ),
      Transaction(
      id: 'T7', 
      title: 'New Jacket',
      amount: 42.69,
      date: DateTime.now()
      ),
    Transaction(
      id: 'T8', 
      title: 'New Boots',
      amount: 77.49,
      date: DateTime.now()
      ),
Card(
    child: SingleChildScrollView(
        child: Row(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            children: <Widget>[
                Container(                    
                    margin: EdgeInsets.symmetric(
                        vertical: 10,
                        horizontal: 15,
                        ),
                    decoration: BoxDecoration(
                        border: Border.all(
                            color: Theme.of(context).primaryColor,
                            width: 2,
                        ),
                    ),
                    padding: EdgeInsets.all(10),
                    child: Text(
                        '\$${transactions[index].amount.toStringAsFixed(2)}',
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 20,
                          color: Theme.of(context).primaryColor,
                        ),
                    ),
                ),
                Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    children: <Widget>[
                      Text(
                        transactions[index].title,
                        style: TextStyle(
                          fontWeight: FontWeight.bold,
                          fontSize: 15,
                        ),
                      ),
                      Text(
                        DateFormat.yMMMMEEEEd().format(transactions[index].date),
                        style: TextStyle(
                          fontSize: 12,
                          color: Colors.grey,
                        ),
                      ),
                    ]),
                   Container(                  
                    child: IconButton(
                            color: Colors.red,
                            icon: Icon(Icons.delete_outline), 
                            onPressed: () => delete(transactions[index].id),
                          ),
                   ), 
                  ],),
                ),
              ),
 (showChart == true)
Container(
              height: 
                 mediaQuery.orientation == Orientation.portrait ?  
                (trueHeight * 0.22) : 
                (trueHeight * 0.45),
              child: Chart(recentTransactions)
              ),
            Container(
              height: 
              usertransactions.length == 0 ?
                Image.asset('assets/images/waiting.png').height : 
                (mediaQuery.orientation == Orientation.portrait ?  
                (trueHeight * 0.72) : 
                (trueHeight * 0.55)) ,
              child: TransactionList(usertransactions, deleteTransaction)
              ),

  // WidgetsFlutterBinding.ensureInitialized();
  // SystemChrome.setPreferredOrientations([
  //   DeviceOrientation.portraitUp,
  //   DeviceOrientation.portraitDown,
  //   DeviceOrientation.landscapeLeft,
  //   DeviceOrientation.landscapeRight,
  // ]);
  FlatButton(
    color: Colors.red
    icon: Icon(Icons.delete_outline),
    onPressed: () => delete(transactions[index].id),
    title: Text('Delete')
  )
                                  child: Row(
                                    children: [
                                      , ),
                                      , style: TextStyle(color: Colors.red))
                                    ],
                                  ),
                                  
                                )